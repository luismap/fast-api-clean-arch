"""initial setup

Revision ID: 3ac1e77861d3
Revises: 
Create Date: 2024-03-03 12:10:45.563130

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3ac1e77861d3"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("create schema if not exists fast_api")
    op.create_table(
        "products",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("is_sale", sa.Boolean(), server_default="false", nullable=True),
        sa.Column("inventory", sa.Integer(), server_default="0", nullable=True),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="fast_api",
    )
    op.create_index(
        op.f("ix_fast_api_products_id"),
        "products",
        ["id"],
        unique=False,
        schema="fast_api",
    )
    op.create_table(
        "user",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
        schema="fast_api",
    )
    op.create_index(
        op.f("ix_fast_api_user_user_id"),
        "user",
        ["user_id"],
        unique=False,
        schema="fast_api",
    )
    op.create_table(
        "posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("content", sa.String(), nullable=True),
        sa.Column("published", sa.Boolean(), server_default="false", nullable=True),
        sa.Column("rating", sa.SmallInteger(), server_default="0", nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["fast_api.user.user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="fast_api",
    )
    op.create_index(
        op.f("ix_fast_api_posts_id"), "posts", ["id"], unique=False, schema="fast_api"
    )
    op.create_table(
        "votes",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["post_id"], ["fast_api.posts.id"], onupdate="CASCADE"),
        sa.ForeignKeyConstraint(
            ["user_id"], ["fast_api.user.user_id"], onupdate="CASCADE"
        ),
        sa.PrimaryKeyConstraint("user_id", "post_id"),
        schema="fast_api",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("votes", schema="fast_api")
    op.drop_index(op.f("ix_fast_api_posts_id"), table_name="posts", schema="fast_api")
    op.drop_table("posts", schema="fast_api")
    op.drop_index(
        op.f("ix_fast_api_user_user_id"), table_name="user", schema="fast_api"
    )
    op.drop_table("user", schema="fast_api")
    op.drop_index(
        op.f("ix_fast_api_products_id"), table_name="products", schema="fast_api"
    )
    op.drop_table("products", schema="fast_api")
    op.execute("drop schema fast_api")

    # ### end Alembic commands ###
